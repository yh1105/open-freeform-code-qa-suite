The issue you're facing is because you're trying to format a `LocalDate` object which only contains date information (year, month, day) and does not contain time information (hour, minute, second). The `SimpleDateFormat` class is expecting a `Date` object which contains both date and time information.

To generate a random date and time, you should use `LocalDateTime` instead of `LocalDate`. Here is the corrected code:

```java
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now().minusDays(new Random().nextInt(365 * 70));
        System.out.println("date and time :: " + dateTime.toString());
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.atZone(ZoneOffset.UTC).format(formatter);
    }
}
```

In this code, `LocalDateTime.now().minusDays(new Random().nextInt(365 * 70))` generates a random date and time in the past 70 years. The `DateTimeFormatter` is used to format the `LocalDateTime` object to the desired format. The `atZone(ZoneOffset.UTC)` method is used to convert the `LocalDateTime` to a `ZonedDateTime` at UTC, which can then be formatted to a string with the 'Z' suffix.