Yes, you are correct. Since Spring 4.3, if a class, which is annotated with @Component or its stereotype annotations (@Service, @Repository, @Controller), contains a single constructor, the @Autowired annotation on that constructor is no longer necessary and the constructor is automatically autowired.

The reason why some people still use @Autowired on constructors could be:

1. **Backward compatibility**: They are working with a codebase that needs to be compatible with older versions of Spring that require the @Autowired annotation.

2. **Explicitness**: Using @Autowired makes it clear that Spring is managing the dependency injection. This can make the code easier to understand for people who are not familiar with the newer versions of Spring.

3. **Multiple constructors**: If a class has more than one constructor, Spring won't know which one to use for autowiring unless you specify it with @Autowired.