The error you're encountering is due to the fact that AWS Lambda expects a Linux binary, but you're providing a Windows binary. When you run `go build main.go` on a Windows machine, it generates a Windows binary (main.exe), which is not compatible with the Linux environment in AWS Lambda.

To solve this issue, you need to cross-compile your Go code for Linux. You can do this by setting the `GOOS` and `GOARCH` environment variables before building your Go code. Here's how you can do it:

```bash
SET GOOS=linux
SET GOARCH=amd64
go build main.go
```

This will generate a Linux binary named `main` (without .exe). Then, you can zip this file and upload it to AWS Lambda. 

Also, make sure that the handler name in AWS Lambda is set to `main` (without .exe). 

Please note that the binary file must have execute permissions for the `root` user. If you're using Git Bash or WSL to create the zip file, you can add execute permissions with the following command:

```bash
chmod +x main
```

Then, you can zip the file:

```bash
zip deployment.zip main
```

Now, you can upload `deployment.zip` to AWS Lambda.