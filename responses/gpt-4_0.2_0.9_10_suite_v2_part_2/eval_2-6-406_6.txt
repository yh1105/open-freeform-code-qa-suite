In a console application, you don't have the `WebApplication` class available. You need to manually build the configuration. Here's an example of how you can do it:

```csharp
using Microsoft.Extensions.Configuration;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        var builder = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true);

        IConfigurationRoot configuration = builder.Build();

        // Now you can use the configuration object to get your settings.
        var mySetting = configuration.GetSection("MySetting").Value;
    }
}
```

In this example, `appsettings.json` should be in the same directory as your executable. If it's not, you should adjust the path accordingly. Also, make sure that the `appsettings.json` file is set to be copied to the output directory (you can set this in the file properties in Visual Studio).

This code uses the `Microsoft.Extensions.Configuration` package, so make sure you have it installed. You can add it via NuGet package manager in Visual Studio or by running the following command in your package manager console:

```shell
Install-Package Microsoft.Extensions.Configuration.Json
```