In C++, string interpolation isn't as straightforward as in languages like C# or JavaScript. However, you can use `std::string` and `std::to_string` to concatenate strings and variables. Here's an example:

```cpp
#include <string>

int myVariable = 10;
std::string myString = "My variable has value " + std::to_string(myVariable);
```

If you want a more formatted approach, you can use `printf` or `sprintf`:

```cpp
#include <cstdio>

int myVariable = 10;
printf("My variable has value %d", myVariable);
```

Or you can use `std::ostringstream`:

```cpp
#include <sstream>

int myVariable = 10;
std::ostringstream oss;
oss << "My variable has value " << myVariable;
std::string myString = oss.str();
```

In C++20, there's a new feature called `std::format` which is similar to string interpolation:

```cpp
#include <format>

int myVariable = 10;
std::string myString = std::format("My variable has value {}", myVariable);
```

Please note that `std::format` is only available from C++20 onwards.