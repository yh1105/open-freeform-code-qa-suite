Here is a Python function that uses the pandas library to achieve your requirements:

```python
import pandas as pd

def extractCellValue(df, matchedString):
    # Convert the matchedString to integer as the column is of integer type
    matchedString = int(matchedString)
    
    # Use the .loc method to locate the row
    row = df.loc[df['instrument_token'] == matchedString]
    
    # If the row is not empty, return the tradingsymbol, else return None
    if not row.empty:
        return row['tradingsymbol'].values[0]
    else:
        return None
```

This function works by first locating the row in the DataFrame where the `instrument_token` matches the `matchedString`. If such a row is found, it returns the corresponding `tradingsymbol`. If no such row is found, it returns `None`.

You can use this function like this:

```python
df = pd.DataFrame({
    'instrument_token': [123, 555, 34, 189],
    'tradingsymbol': ['xyz', 'aaa', 'rst', 'op'],
    'lot_size': [1000, 200, 2400, 780]
})

print(extractCellValue(df, '123'))  # Outputs: 'xyz'
```

Please replace the DataFrame `df` with your actual DataFrame and the `matchedString` with the actual string you want to match.