The issue you're facing is due to the single quotes around `$searchT`. In bash, single quotes preserve the literal value of all characters within the quotes, which means your variable `$searchT` is not being expanded to its value. 

You should use double quotes instead. Here's the corrected script:

```bash
#!/bin/bash
read -p "enter search term here: " searchT

if [[ $(cat test.txt | grep -wi "$searchT") ]]; then     
    echo "$(cat test.txt | grep "$searchT" | wc -l) number of matches found"
    echo $(cat test.txt | grep "$searchT")

else 
    echo "no match found"    

fi

exit 0
```

In this corrected script, `$searchT` is enclosed in double quotes, which allows for variable expansion. So, the `grep` command will correctly use the value of `$searchT` as the search term. 

Also, note that I moved `| wc -l` to the end of the `grep` command in the `echo` statement. This is because `wc -l` counts the number of lines, and it should be used after the `grep` command to count the number of matching lines.