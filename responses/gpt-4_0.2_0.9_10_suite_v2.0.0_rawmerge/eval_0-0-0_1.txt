Sure, here is a function that does what you described:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first gets the keys of the object using `Object.keys()`. Then it maps over these keys and for each key, it gets the `price` field from the corresponding object. Finally, it returns an array containing the keys and the prices.

Please note that the `assert` statements in your example won't work as expected because `==` does not compare the contents of arrays in JavaScript. Instead, it checks if the two arrays are the same object. To compare the contents of the arrays, you could use a function like this:

```javascript
function arraysEqual(a, b) {
    return a.length === b.length && a.every((val, index) => val === b[index]);
}
```

Then you can use this function in your assertions:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
assert(arraysEqual(ret[0], ["milk", "bread", "potato"]))
assert(arraysEqual(ret[1], [20, 15, 10]))
```