The Rule of Five is not outdated, but its usage has been reduced due to the introduction of smart pointers and other features in modern C++. 

You're correct in saying that for many classes, especially those that manage their resources properly, the default constructors, destructors, and assignment operators provided by the compiler are sufficient. 

However, there are still cases where you might need to define these yourself. For instance, if your class is managing a non-memory resource (like a file handle or a network socket), or if it has to interact with a C-style API that requires manual management of resources.

Smart pointers like `std::unique_ptr` and `std::shared_ptr` can indeed simplify resource management and make the Rule of Five less necessary. However, they are not a panacea and there are still cases where you might need to define these special member functions yourself.

For example, if you have a class that needs to maintain a specific order of construction/destruction relative to other objects, or if you need to implement a specific kind of copy behavior that isn't just a shallow or deep copy (like a copy-on-write), then you'll need to define these functions yourself.

In conclusion, while the need for the Rule of Five has been reduced in modern C++, it's not completely outdated. It's still a useful guideline to know and understand, even if you don't end up using it in every class you write.