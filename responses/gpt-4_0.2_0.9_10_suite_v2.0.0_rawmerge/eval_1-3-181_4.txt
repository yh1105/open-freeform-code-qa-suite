Here is a Python function that uses NumPy's indexing and `max` function to achieve this:

```python
import numpy as np

def getMax(matrix):
    # Select the third column from each 2D array in the 3D array
    third_column = matrix[:,:,2]
    # Find the max value in each selected column and reshape the result to a 2D array
    max_values = np.max(third_column, axis=1).reshape(-1,1)
    return max_values
```

This function works by first selecting the third column from each 2D array in the 3D array using NumPy's advanced indexing. Then, it finds the maximum value in each selected column using `np.max` with `axis=1`, which operates along the rows. Finally, it reshapes the result to a 2D array using `reshape(-1,1)`. 

You can use this function like so:

```python
matrix = np.array([[[4, 1, 5, 2, 5, 5, 7, 8, 9, 7],
                    [7, 4, 2, 4, 7, 8, 4, 1, 3, 5],
                    [6, 1, 2, 1, 1, 1, 2, 3, 7, 6],
                    [5, 5, 5, 0, 5, 4, 3, 8, 7, 1],
                    [2, 8, 6, 7, 4, 7, 5, 5, 5, 1]],

                   [[9, 9, 5, 8, 0, 7, 3, 9, 8, 1],
                    [9, 1, 9, 5, 7, 4, 5, 4, 7, 0],
                    [1, 0, 4, 8, 7, 3, 4, 3, 8, 8],
                    [8, 1, 3, 1, 7, 0, 9, 9, 3, 8],
                    [4, 0, 2, 3, 8, 2,