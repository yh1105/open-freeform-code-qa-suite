Sure, you can achieve this by using `groupby`, `cumsum` and `ffill` functions in pandas. Here is the function `aggregation`:

```python
def aggregation(df):
    # Ensure that the 'value' column is of numeric type
    df['value'] = pd.to_numeric(df['value'])

    # Create a new column 'balance' where 'type' is 'deposit', else NaN
    df['balance'] = df.loc[df['type'] == 'deposit', 'value']

    # Group by 'exchange' and calculate the cumulative sum, then forward fill the NaN values
    df['balance'] = df.groupby('exchange')['balance'].cumsum().ffill()

    return df
```

This function first ensures that the 'value' column is of numeric type. Then it creates a new column 'balance' where it copies the values from 'value' column if 'type' is 'deposit', else it puts NaN. Then it groups the DataFrame by 'exchange' and calculates the cumulative sum of 'balance' within each group. The `ffill` function is used to forward fill the NaN values with the last valid observation within each group.