Sure, here is a generator function that should do the trick:

```javascript
function* iterLeafNodes(strHTML, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strHTML, 'text/html');
  const body = doc.body;

  function* walk(node, format=[]) {
    if (node.nodeType === Node.TEXT_NODE) {
      if (node.textContent.trim() !== '') {
        yield {
          text: node.textContent,
          format: format
        };
      }
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      for (let child of node.childNodes) {
        yield* walk(child, format.concat(node.tagName.toLowerCase()));
      }
    }
  }

  for (let child of body.childNodes) {
    yield* walk(child);
  }
}
```

This function uses a recursive approach to walk through the DOM tree, yielding each text node along with its format. The format is determined by the tag names of the parent nodes, which are collected in an array.