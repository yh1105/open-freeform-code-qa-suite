The error `java.io.IOException: No such file or directory` usually occurs when the directory you are trying to write to does not exist or the app does not have permission to write to that directory.

In Android 11 (API level 30), Google made changes to how apps can access the file system. The `Environment.getExternalStorageDirectory()` method is deprecated and no longer works as expected. 

Instead, you should use the app-specific directory to save your files. You can get the app-specific directory using `Context.getExternalFilesDir()`. This method returns a `File` representing an external storage directory where you should save your app-specific files. These files will be deleted when the user uninstalls your app.

Here is how you can modify your `getTempFolder()` method:

```java
private fun getTempFolder(): File {
    val directoryFolder = File(context.getExternalFilesDir(null), "sample-take-image")
    directoryFolder.mkdirs()
    return directoryFolder
}
```

In this code, `context` is an instance of `Context`. You can get it in an Activity or a Service. If you are inside a Fragment, you can call `getActivity()`.

Also, make sure you have the necessary permissions to write to the external storage. You should have this line in your `AndroidManifest.xml`:

```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

And you should request this permission at runtime before trying to write to the external storage:

```java
if (ContextCompat.checkSelfPermission(thisActivity, Manifest.permission.WRITE_EXTERNAL_STORAGE)
    != PackageManager.PERMISSION_GRANTED) {
    // Permission is not granted
    ActivityCompat.requestPermissions(thisActivity,
        arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE),
        MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE)
}
```

In this code, `thisActivity` is an instance of `Activity`, and `MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE` is an integer that you define to identify the permission request.