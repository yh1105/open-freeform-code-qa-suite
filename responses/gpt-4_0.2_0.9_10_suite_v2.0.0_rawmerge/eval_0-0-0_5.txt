Sure, here is a function that does exactly what you asked for:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first gets all the keys from the object using `Object.keys()`. Then it maps over these keys and for each key, it gets the corresponding price from the object. Finally, it returns an array containing the keys and prices arrays.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the `==` operator in JavaScript does not work for array comparison. You might want to use a deep equality check function, such as `_.isEqual` from lodash, or write your own function for array comparison.