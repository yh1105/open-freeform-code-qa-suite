Yes, you can prevent the generation of the `*-plain.jar` file by configuring the `bootJar` task in your `build.gradle` file. The `*-plain.jar` file is generated by the `bootJar` task, which is a part of the Spring Boot Gradle plugin.

You can disable the `bootJar` task like this:

```groovy
bootJar {
    enabled = false
}
```

But this will also disable the generation of the `myprogram-0.0.1.jar` file. To keep generating the `myprogram-0.0.1.jar` file, you need to enable the `jar` task:

```groovy
jar {
    enabled = true
}
```

So, your `build.gradle` file should look like this:

```groovy
plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

test {
    useJUnitPlatform()
}
```

This will generate only the `myprogram-0.0.1.jar` file and not the `myprogram-0.0.1-plain.jar` file.