Sure, you can use `async/await` with `toPromise()` to wait for the Observable to complete. Here is your revised code:

```javascript
async getData() {
  this.newIds = await this.repository.getById(Ids).pipe(map((response) => {
    console.log(response);
    return response.map((id) => {
      return id;
    });
  })).toPromise();
  console.log(this.newIds);
}
```

Please note that you need to call `getData()` function to execute the code.