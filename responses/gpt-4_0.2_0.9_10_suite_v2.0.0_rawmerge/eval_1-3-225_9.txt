Sure, here's a revised version of your function:

```python
def pig_latin(text):
    words = text.split()
    pig_latin_words = []
    for word in words:
        pig_latin_word = word[1:] + word[0] + 'ay'
        pig_latin_words.append(pig_latin_word)
    return ' '.join(pig_latin_words)
```

This function works by splitting the input text into words, then for each word, it creates a new word by taking the substring from the second character to the end, appending the first character, and then appending "ay". It then joins all the transformed words back together with spaces in between.