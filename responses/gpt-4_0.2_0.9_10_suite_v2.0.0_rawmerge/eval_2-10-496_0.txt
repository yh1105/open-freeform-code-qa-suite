You can use the `sort_by` method provided by Rust's `Vec` type to sort your vector of structs. Here's how you can do it:

```rust
my_vector.sort_by(|a, b| {
    a.row.cmp(&b.row)
        .then_with(|| a.column.cmp(&b.column))
});
```

In this code, `sort_by` takes a closure that compares two elements of the vector. The `cmp` method is used to compare the `row` fields first. If they are equal (`cmp` returns `std::cmp::Ordering::Equal`), the `then_with` method is called, which compares the `column` fields.

This will sort your vector in ascending order first by `row`, and then by `column` within each group of equal `row` values. If you want to sort in descending order, you can use `cmp` method in combination with `reverse` method.