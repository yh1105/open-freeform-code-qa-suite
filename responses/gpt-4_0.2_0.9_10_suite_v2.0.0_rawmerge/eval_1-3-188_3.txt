Here is a Python function that uses the pandas library to achieve your requirements:

```python
import pandas as pd

def extractCellValue(df, matchedString):
    # Ensure that the instrument_token column is of type str
    df['instrument_token'] = df['instrument_token'].astype(str)
    
    # Search for the matchedString in the instrument_token column
    matched_row = df[df['instrument_token'] == matchedString]
    
    # If a match is found, return the corresponding tradingsymbol
    if not matched_row.empty:
        return matched_row['tradingsymbol'].values[0]
    else:
        return None
```

This function first ensures that the `instrument_token` column is of type string. It then searches for the `matchedString` in the `instrument_token` column. If a match is found, it returns the corresponding `tradingsymbol`. If no match is found, it returns `None`.

You can use this function like this:

```python
df = pd.DataFrame({
    'instrument_token': ['123', '555', '34', '189'],
    'tradingsymbol': ['xyz', 'aaa', 'rst', 'op'],
    'lot_size': [1000, 200, 2400, 780]
})

print(extractCellValue(df, '123'))  # Output: 'xyz'
```

This will print 'xyz', which is the `tradingsymbol` corresponding to the `instrument_token` '123'.