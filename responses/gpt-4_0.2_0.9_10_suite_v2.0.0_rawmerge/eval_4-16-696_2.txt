The problem is that the command substitution `$(echo {} | sed 's/\?.*//g')` is evaluated before the `find` command is run, so it doesn't have the expected effect. 

Instead, you can use a bash loop to process the files:

```bash
find . -type f -name '*\?*' | while read -r file; do mv "$file" "${file%%\?*}"; done
```

This command uses the `%%\?*` parameter expansion to remove the `?` and everything after it from the filename. 

Please note that this command will overwrite files without asking if a file with the new name already exists. If you want to avoid this, you can add a check before the `mv` command.