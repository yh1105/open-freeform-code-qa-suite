Sure, here is a function that removes timezone information from all datetime columns in a DataFrame:

```python
def removeTimezone(df):
    for col in df.columns:
        if df[col].dtype == 'datetime64[ns, UTC]':
            df[col] = df[col].dt.tz_convert(None)
    return df
```

This function loops through each column in the DataFrame. If the column's data type is 'datetime64[ns, UTC]', it converts the timezone to None, effectively removing the timezone information.

You can use this function before writing your DataFrame to Excel:

```python
df = removeTimezone(df)
writer = pd.ExcelWriter(arquivo+'.xlsx', engine = 'xlsxwriter')
df.to_excel(writer, header = True, index = True)
```

Please note that this function will modify the original DataFrame. If you want to keep the original DataFrame unchanged, you can create a copy before removing the timezone:

```python
def removeTimezone(df):
    df_copy = df.copy()
    for col in df_copy.columns:
        if df_copy[col].dtype == 'datetime64[ns, UTC]':
            df_copy[col] = df_copy[col].dt.tz_convert(None)
    return df_copy
```

In this case, the original DataFrame `df` will remain unchanged, and the function will return a new DataFrame with timezone information removed.