The error you're seeing is because you're trying to format a `LocalDate` object with a `SimpleDateFormat` that expects a `Date` object. `LocalDate` does not contain time information, which is why you're not seeing any time in your output.

To generate a random date and time, you should use `LocalDateTime` instead of `LocalDate`. Here's how you can modify your code:

```java
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.ThreadLocalRandom;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        long minDay = LocalDateTime.of(1950, 1, 1, 0, 0).toEpochSecond(ZoneOffset.UTC);
        long maxDay = LocalDateTime.of(2020, 12, 31, 23, 59).toEpochSecond(ZoneOffset.UTC);
        long randomDay = ThreadLocalRandom.current().nextLong(minDay, maxDay);

        LocalDateTime randomDate = LocalDateTime.ofEpochSecond(randomDay, 0, ZoneOffset.UTC);
        System.out.println("date and time :: " + randomDate.toString());
        return formatDate(randomDate);
    }

    public static String formatDate(LocalDateTime date){
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return date.format(dateFormat);
    }
}
```

In this code, `LocalDateTime.ofEpochSecond(randomDay, 0, ZoneOffset.UTC)` generates a random date and time between 1950-01-01 00:00 and 2020-12-31 23:59. `DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'")` is used to format the `LocalDateTime` object to the desired format.