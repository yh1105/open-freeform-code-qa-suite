The problem with your code is that you're creating a new styled component every time your component renders. This is inefficient because styled-components are meant to be declared once and reused, not recreated on every render. 

Here's how you can refactor your code:

```javascript
import React from 'react'
import styled from 'styled-components'

// start
const TabWrapper = styled.li`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px;
  margin: 1px;
  font-size: 3em;
  color: ${props => (props.isSelected ? `white` : `black`)};
  background-color: ${props => (props.isSelected ? `black` : `#C4C4C4`)};
  cursor: ${props => (props.isSelected ? 'default' : `pointer`)};
`
// end

const Tab = ({ onClick, isSelected, children }) => {
  return <TabWrapper isSelected={isSelected} onClick={onClick}>{children}</TabWrapper>
}

export default Tab
```

In this refactored code, `TabWrapper` is declared once outside of the `Tab` component. Then, inside the `Tab` component, we pass `isSelected` as a prop to `TabWrapper`. This way, the styled component can still access `isSelected` to determine its styles, but we're not recreating the styled component on every render.