The issue you're encountering is due to the use of single quotes around your variable `$searchT` in the `grep` command. Single quotes in bash will prevent variable expansion, meaning your `grep` command is literally searching for the string `$searchT` instead of the value of the variable.

You should use double quotes instead. Here's the corrected script:

```bash
#!/bin/bash
read -p "enter search term here: " searchT

if [[ $(cat test.txt | grep -wi "$searchT") ]]; then     
    echo "$(cat test.txt | grep "$searchT" | wc -l) number of matches found"
    echo $(cat test.txt | grep "$searchT")

else 
    echo "no match found"    

fi

exit 0
```

This script will now correctly use the value of the variable `$searchT` in the `grep` command. If the `grep` command finds any matches, the `if` statement will be true and the script will output the number of matches and the matching lines. If no matches are found, the script will output "no match found".