Here is a Python function that uses the `re` module to split the input string at dashes and underscores, then uses the `str.capitalize()` method to capitalize the first letter of each word (except the first word), and finally joins the words together without spaces:

```python
import re

def to_camel_case(text):
    words = re.split('-|_', text)
    return words[0] + ''.join(word.capitalize() for word in words[1:])
```

This function works by first splitting the input string into a list of words. The regular expression `-|_` matches either a dash or an underscore, so the `re.split()` function splits the string at each dash or underscore.

Then, the function uses a list comprehension to create a new list of words where each word (except the first one) is capitalized. The `str.capitalize()` method capitalizes the first letter of a string and makes all other characters lowercase.

Finally, the function uses the `str.join()` method to join the words together into a single string without spaces. The first word is added to the beginning of the string without being capitalized, and the rest of the words are added with their first letter capitalized. This results in a camel case string.