Sure, you can use the 'scroll' event and change the 'style.backgroundColor' property to dynamically change the background color on scroll. Here is the completed code:

```javascript
const [red, green, blue] = [69, 111, 225]
const section1 = document.querySelector('.section1')

window.addEventListener('scroll', () => {
  let y = 1 + (window.scrollY || window.pageYOffset) / 150
  y = y < 1 ? 1 : y // ensure y is always >= 1 (due to Safari's elastic scroll)
  const [r, g, b] = [red/y, green/y, blue/y].map(Math.round)
  section1.style.backgroundColor = `rgb(${r}, ${g}, ${b})`
})
```
In this code, the 'scroll' event is used to detect when the user is scrolling. The 'style.backgroundColor' property is used to change the background color of the 'section1' element. The color is calculated based on the scroll position, with the color becoming lighter as the user scrolls down.