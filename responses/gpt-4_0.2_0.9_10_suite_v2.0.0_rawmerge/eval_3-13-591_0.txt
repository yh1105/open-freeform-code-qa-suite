The reason why you are seeing log 2 before log 1 is because the `onItemSelected` method is only called when an item in the spinner is selected. This is an asynchronous callback, meaning it will be called at some point in the future when the user interacts with the spinner.

The `return itemSelected` line, however, is executed immediately after the spinner is set up, which is why you are seeing log 2 before log 1. At the time `return itemSelected` is executed, no item has been selected yet, so `itemSelected` is still an empty string.

If you want to use the selected item outside of the `onItemSelected` method, you could consider using a callback function. Here's an example:

```kotlin
fun Spinner.setupListWithAdapter(list: MutableList<String>, callback: (String) -> Unit) {
    val adapter = ArrayAdapter(context, android.R.layout.simple_spinner_item, list)
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
    this.adapter = adapter
    this.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
        override fun onItemSelected(p0: AdapterView<*>?, p1: View?, p2: Int, p3: Long) {
            val itemSelected = list[p2]
            Log.e("categoryLog","1 : " + itemSelected)
            callback(itemSelected)
        }
        override fun onNothingSelected(p0: AdapterView<*>?) {
        }
    }
}
```

Then you can use this function like this:

```kotlin
mySpinner.setupListWithAdapter(myList) { selectedItem ->
    // Use selectedItem here
    Log.e("categoryLog","2 : " + selectedItem)
}
```

In this case, log 2 will be printed after an item is selected.