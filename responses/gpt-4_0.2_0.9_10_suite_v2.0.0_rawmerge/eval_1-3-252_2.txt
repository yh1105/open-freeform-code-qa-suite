You can achieve this by using the `groupby` function in pandas, which groups the DataFrame by the 'A' column, and then use the `idxmin` function to find the index of the minimum value in the 'B' column for each group. After that, use the `loc` function to select these rows. Here is the function:

```python
import pandas as pd

def getMin(df):
    return df.loc[df.groupby('A')['B'].idxmin()]
```

This function works as follows:

1. `df.groupby('A')['B'].idxmin()` groups the DataFrame by column 'A' and finds the index of the minimum value in column 'B' for each group.
2. `df.loc[...]` selects the rows with these indices from the original DataFrame.

You can use this function like this:

```python
df = pd.DataFrame({'A': [1, 1, 1, 2, 2, 2],
                   'B': [4, 5, 2, 7, 4, 6],
                   'C': [3, 4, 10, 2, 4, 6]})

print(getMin(df))
```

This will print:

```
   A  B   C
2  1  2  10
4  2  4   4
```