Here is a function `mySplit` that uses the `strsplit` function to split the strings in `col1` by comma and colon, and then reshapes the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings in col1 by comma and colon
  split_list <- strsplit(as.character(df$col1), ",|:")
  
  # Create a matrix from the split strings
  split_matrix <- do.call(rbind, lapply(split_list, function(x) matrix(x, ncol = 2, byrow = TRUE)))
  
  # Convert the matrix to a data frame, using the first row as the column names
  split_df <- as.data.frame(split_matrix[-1, ], stringsAsFactors = FALSE)
  colnames(split_df) <- split_matrix[1, ]
  
  return(split_df)
}
```

You can use this function on your data frame `df` like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"), stringsAsFactors = FALSE)
result <- mySplit(df)
print(result)
```

This will print:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```

Please note that the `City` column for the second row is a character string "NA", not a true R `NA` value. If you want to convert these "NA" strings to true `NA` values, you can add a line at the end of the `mySplit` function:

```r
split_df[split_df == "NA"] <- NA
```