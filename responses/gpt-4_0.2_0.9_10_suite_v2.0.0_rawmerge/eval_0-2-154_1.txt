Sure, here is a generator function that will yield the desired result:

```javascript
function* iterLeafNodes(strHTML, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strHTML, 'text/html');
  const body = doc.body;

  function* walk(node, format=[]) {
    if (node.nodeType === Node.TEXT_NODE) {
      yield { text: node.nodeValue, format };
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      format = [...format];
      if (node.tagName !== 'P') {
        format.push(node.tagName.toLowerCase());
      }
      for (const child of node.childNodes) {
        yield* walk(child, format);
      }
    }
  }

  for (const child of body.childNodes) {
    yield* walk(child);
  }
}
```

This function uses a recursive approach to walk through the DOM tree, yielding an object for each text node it encounters. The format array is updated as it descends into nested tags.