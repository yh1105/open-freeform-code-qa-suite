In C++, string interpolation isn't as straightforward as in languages like C# or JavaScript. However, you can achieve similar results using `std::stringstream` or `std::string` with `std::to_string`.

Here is an example using `std::stringstream`:

```cpp
#include <sstream>

int myVariable = 5;
std::stringstream ss;
ss << "My variable has value " << myVariable;
std::string result = ss.str();
```

And here is an example using `std::string` with `std::to_string`:

```cpp
int myVariable = 5;
std::string result = "My variable has value " + std::to_string(myVariable);
```

If you want to use a more modern and cleaner approach, you can use the `fmt` library (which will be part of C++20 standard library as `std::format`):

```cpp
#include <fmt/core.h>

int myVariable = 5;
std::string result = fmt::format("My variable has value {}", myVariable);
```

Please note that the `fmt` library is not part of the standard library in C++ versions prior to C++20, so you would need to add it to your project manually.