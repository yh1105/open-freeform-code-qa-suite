Your code seems to be on the right track, but there are a few issues. 

First, you're trying to use `query` and `currentSheet` as if they were objects, but you're assigning them string values. 

Second, you're trying to use `query.Name` but `query` is a string, not an object, so it doesn't have a `Name` property.

Here's a revised version of your code:

```vba
Sub LoadToWorksheetOnly()

    Dim query As String
    Dim currentSheet As Worksheet
    Dim targetSheet As Worksheet

    ' Set the query string and the target sheet
    query = Sheets("Sheet6").Range("A1").Value
    Set targetSheet = Sheets("target")

    ' Create a new ListObject with a QueryTable that uses the Power Query connection string
    With targetSheet.ListObjects.Add(SourceType:=0, Source:= _
        "OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=" & query _
        , Destination:=targetSheet.Range("$A$1")).QueryTable
        .CommandType = xlCmdDefault
        .CommandText = Array("SELECT * FROM [" & query & "]")
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .BackgroundQuery = True
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .PreserveColumnInfo = False
        .Refresh BackgroundQuery:=False
    End With

End Sub
```

This code assumes that the query string in `Sheet6` cell `A1` is the name of a Power Query query in the workbook. If it's actually the M code for a query, you would need to create a new query with that code using the `Workbook.Queries.Add` method before you could use it in a `ListObject`.