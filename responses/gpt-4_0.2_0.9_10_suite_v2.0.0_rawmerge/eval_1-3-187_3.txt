Here is a Python function that does what you want:

```python
def ReplaceElementsByIndex(rest, b, last):
    # Create a dictionary where the keys are the first four elements of b
    # and the values are the corresponding elements of rest
    replace_dict = dict(zip(b[:4], rest))

    # Use a list comprehension to replace the elements in last
    # If the element is in replace_dict, replace it with the corresponding value
    # Otherwise, keep the original element
    last = [replace_dict.get(x, x) for x in last]

    return last
```

You can use this function like this:

```python
rest=[5, 7, 11, 4]
b=[21, 22, 33, 31, 23, 15, 19, 13, 6]
last=[33, 19, 40, 21, 31, 22, 6, 15, 13, 23]

print(ReplaceElementsByIndex(rest, b, last))
```

This will output:

```python
[11, 19, 40, 5, 4, 7, 6, 15, 13, 23]
```

This function works by creating a dictionary that maps the first four elements of `b` to the corresponding elements of `rest`. Then it uses a list comprehension to create a new list where each element is either replaced by its corresponding value in the dictionary (if it has one) or kept the same (if it doesn't).