In order to create an index in Mongoose, you need to use the `@Index()` decorator from the `@nestjs/mongoose` package. Here is how you can do it:

```javascript
import { Prop, Schema, SchemaFactory, Index } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema()
@Index({ type: 1 }) // This is where you define the index
export class MySchema extends Document {

  @Prop()
  _id: string;

  @Prop({required: true})
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchemaModel = SchemaFactory.createForClass(MySchema);
```

In the above code, `@Index({ type: 1 })` creates an ascending index on the `type` field.

Also, make sure that you are connecting to the database and using the model correctly in your service or repository. The index will be created when the model is used for the first time. If you are still having issues, you might want to check the logs for any errors or warnings related to index creation.

Remember that creating an index can take some time if you have a lot of documents in your collection. You can check if the index has been created successfully by using the `getIndexes()` method on the model:

```javascript
const indexes = await MySchemaModel.getIndexes();
console.log(indexes);
```

This will print all the indexes of the collection to the console.