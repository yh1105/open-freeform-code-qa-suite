Here is a function `mySplit` that uses the `strsplit` function to split the strings in the column `col1` of the data frame `df` by comma and colon, and then reshapes the resulting list into a data frame:

```r
mySplit <- function(df) {
  # Split the strings in col1 by comma and colon
  split_list <- strsplit(as.character(df$col1), ",|:")
  
  # Initialize an empty data frame
  df_new <- data.frame()
  
  # Loop over the list
  for (i in seq_along(split_list)) {
    # Reshape the list into a data frame
    df_temp <- data.frame(matrix(unlist(split_list[[i]]), nrow=2, byrow=TRUE))
    # Set the column names
    colnames(df_temp) <- df_temp[1, ]
    # Remove the first row
    df_temp <- df_temp[-1, ]
    # Bind the data frame to df_new
    df_new <- rbind(df_new, df_temp)
  }
  
  # Return the new data frame
  return(df_new)
}
```

You can use this function as follows:

```r
# Create a data frame
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))

# Use the function
df_new <- mySplit(df)

# Print the new data frame
print(df_new)
```

This will print:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```

Note: This function assumes that the strings in `col1` are always in the format "name:...,Age:...,City:...". If the format can vary, you might need to modify the function accordingly.