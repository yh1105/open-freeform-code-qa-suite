Here is a function `mySplit` that uses the `strsplit` function to split the `segment_stemming` column by comma and parenthesis, and then uses the `unnest` function from the `tidyverse` package to expand the list column into multiple rows.

```r
library(data.table)
library(tidyverse)

mySplit <- function(x) {
  # Convert data.table to data.frame
  x <- as.data.frame(x)
  
  # Split the segment_stemming column
  x$segment_stemming <- strsplit(x$segment_stemming, "\\), \\(")
  
  # Remove the leading and trailing brackets
  x$segment_stemming <- lapply(x$segment_stemming, function(y) {
    gsub("^\\[\\('", "('", gsub("'\\)\\]$", "')", y))
  })
  
  # Unnest the list column
  x <- x %>% unnest(segment_stemming)
  
  # Convert back to data.table
  x <- as.data.table(x)
  
  return(x)
}
```

You can use this function on your data like this:

```r
x <- mySplit(x)
```

Please note that this function assumes that the `segment_stemming` column is a character column where each element is a string representation of a list of tuples. If the `segment_stemming` column is actually a list column where each element is a list of tuples, you would need to modify the function accordingly.