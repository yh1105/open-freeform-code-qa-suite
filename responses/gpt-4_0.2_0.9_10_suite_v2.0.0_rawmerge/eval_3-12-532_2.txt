The `FormatException: Unexpected character (at character 1)` error usually occurs when the response from the server is not a valid JSON. Here are a few steps you can take to debug and solve this issue:

1. **Check the server response**: Print the server response before trying to decode it. This will help you understand what you're receiving from the server.

```dart
print('Response body: ${response.body}');
```

2. **Check the server-side script**: Ensure that your PHP script is correctly outputting a JSON response. You can use `json_encode()` in PHP to convert an array or object into a JSON string.

3. **Check the headers**: Make sure that your server is sending the correct `Content-Type` header (`application/json`).

4. **Handle non-200 HTTP responses**: If the server responds with a non-200 HTTP status code, `http.post` will still complete normally, but the response body may not be valid JSON. You should check `response.statusCode` before trying to decode the body.

```dart
if (response.statusCode == 200) {
  List data = json.decode(response.body);
} else {
  print('Request failed with status: ${response.statusCode}.');
}
```

5. **Handle network errors**: If there's a network error, `http.post` will throw an exception. You should wrap your call in a try/catch block to handle these errors.

```dart
try {
  var response = await http.post(
    url,
    headers:{ "Accept": "application/json" } ,
    body: { "usuario": '$usuario',"password": '$password'},
    encoding: Encoding.getByName("utf-8")
  );
  if (response.statusCode == 200) {
    List data = json.decode(response.body);
  } else {
    print('Request failed with status: ${response.statusCode}.');
  }
} catch (e) {
  print('There was a network error: $e');
}
```

Remember to import the `dart:convert` package to use the `json.decode` function.