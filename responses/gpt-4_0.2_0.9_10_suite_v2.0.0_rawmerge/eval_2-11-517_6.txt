In C++, string interpolation isn't as straightforward as in languages like C# or JavaScript. However, you can achieve something similar using `std::ostringstream` or `std::printf` (C style), or using the `fmt` library (third-party).

Here's an example using `std::ostringstream`:

```cpp
#include <sstream>

int myVariable = 5;
std::ostringstream oss;
oss << "My variable has value " << myVariable;
std::string interpolatedString = oss.str();
```

Here's an example using `std::printf`:

```cpp
#include <cstdio>

int myVariable = 5;
printf("My variable has value %d", myVariable);
```

And here's an example using the `fmt` library:

```cpp
#include <fmt/core.h>

int myVariable = 5;
std::string s = fmt::format("My variable has value {}", myVariable);
```

The `fmt` library is not part of the standard library, but it's widely used and will be part of the standard library in C++20 under the name `std::format`.