You can optimize your task by using `awk` command which is more efficient for text processing. Here's how you can do it:

```bash
awk -F'=' '/^name/{name=$2} /^value/{print name"="$2}' input.txt > output.txt
```

This `awk` command works as follows:

- `-F'='` sets the field separator to `=`.
- `/^name/{name=$2}` if the line starts with `name`, it saves the second field (after `=`) to the variable `name`.
- `/^value/{print name"="$2}` if the line starts with `value`, it prints the previously saved `name` and the second field of the current line.
- `input.txt > output.txt` reads from `input.txt` and writes the output to `output.txt`.