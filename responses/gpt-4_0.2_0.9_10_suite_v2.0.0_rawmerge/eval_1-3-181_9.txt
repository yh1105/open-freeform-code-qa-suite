Sure, you can use the `numpy.amax` function to find the maximum value along an axis. Here is the function you asked for:

```python
import numpy as np

def getMax(matrix):
    # Select the third column from each 2D array in the 3D array
    third_column = matrix[:,:,2]
    
    # Find the maximum value in each 2D array (along the first axis)
    max_values = np.amax(third_column, axis=1)
    
    # Reshape the result to a 2D array
    max_values = max_values.reshape(-1, 1)
    
    return max_values
```

This function works by first selecting the third column from each 2D array in the 3D array. It then finds the maximum value in each of these columns (i.e., the maximum value along the first axis of the 2D array). Finally, it reshapes the result to a 2D array, as you requested.