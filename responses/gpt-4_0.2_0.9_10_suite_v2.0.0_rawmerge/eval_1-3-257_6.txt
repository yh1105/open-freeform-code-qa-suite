Here is a Python function that divides an even number into N parts, each part being a multiple of 2. It first divides the number into equal parts and then distributes the remainder by adding 2 to each group in succession.

```python
def divideNumber(num, n):
    # Calculate the quotient and remainder
    quotient, remainder = divmod(num, n)
    
    # If the quotient is not a multiple of 2, make it a multiple of 2 and adjust the remainder
    if quotient % 2 != 0:
        quotient -= 1
        remainder += n

    # Create a list with n parts of the quotient
    result = [quotient] * n

    # Distribute the remainder by adding 2 to each group in succession
    for i in range(0, remainder, 2):
        result[i // 2] += 2

    return result
```

You can test the function with your example:

```python
print(divideNumber(100, 3))  # Output: [34, 34, 32]
```

This function works by first dividing the number into equal parts. If the quotient is not a multiple of 2, it subtracts 1 from the quotient and adds the number of parts to the remainder to make the quotient a multiple of 2. Then it creates a list with the quotient repeated n times. Finally, it distributes the remainder by adding 2 to each group in succession.