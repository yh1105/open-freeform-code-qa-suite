Here is the function you requested:

```java
public static PriorityQueue<Pair<Integer, Integer>> createPriorityQueue() {
    PriorityQueue<Pair<Integer, Integer>> pq = new PriorityQueue<>(new Comparator<Pair<Integer, Integer>>() {
        @Override
        public int compare(Pair<Integer, Integer> p1, Pair<Integer, Integer> p2) {
            return p1.getKey().compareTo(p2.getKey());
        }
    });
    return pq;
}
```

This function creates a new `PriorityQueue` of `Pair<Integer, Integer>` objects. The `PriorityQueue` is initialized with a custom `Comparator` that compares the keys of the pairs. The pair with the smallest key is considered to have the highest priority.