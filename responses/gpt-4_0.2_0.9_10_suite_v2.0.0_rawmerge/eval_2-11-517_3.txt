In C++, string interpolation isn't as straightforward as in languages like C# or JavaScript. However, you can use `std::stringstream` or `std::string` with `std::to_string` to achieve similar results.

Here's an example using `std::stringstream`:

```cpp
#include <sstream>

int myVariable = 123;
std::stringstream ss;
ss << "My variable has value " << myVariable;
std::string result = ss.str();
```

And here's an example using `std::string` with `std::to_string`:

```cpp
int myVariable = 123;
std::string result = "My variable has value " + std::to_string(myVariable);
```

If you want to use a more modern and convenient way, you can use the `fmt` library (which is part of C++20 standard but not yet widely supported):

```cpp
#include <fmt/core.h>

int myVariable = 123;
std::string result = fmt::format("My variable has value {}", myVariable);
```

Please note that `fmt` library is not part of the standard library in C++ versions prior to C++20, so you would need to install it separately.