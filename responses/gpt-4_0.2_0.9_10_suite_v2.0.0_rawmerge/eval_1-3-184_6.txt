Here is a function that should do what you need. It uses the `openpyxl` library to open the workbook and iterate over the rows of the first sheet. If a cell contains the `matchedString`, it adds the row index to a list.

```python
from openpyxl import load_workbook

def filterExcelRows(filePath, matchedString):
    # Load the workbook
    wb = load_workbook(filename=filePath)
    
    # Select the first sheet
    sheet = wb.worksheets[0]
    
    # List to store the indexes of the rows that contain matchedString
    matchedRows = []
    
    # Iterate over the rows
    for i, row in enumerate(sheet.iter_rows(values_only=True), start=1):
        # If any cell in the row contains the matchedString, add the row index to the list
        if any(matchedString in str(cell) for cell in row):
            matchedRows.append(i)
    
    # Return the list of row indexes
    return matchedRows
```

This function will return a list of row indexes (1-based, to match Excel's indexing) where `matchedString` is found. Note that this function checks if `matchedString` is a substring of any cell in the row, not if it's the exact content of the cell. If you want to check for exact matches, replace `matchedString in str(cell)` with `matchedString == str(cell)`.