Sure, here is a generator function that should do what you want:

```javascript
function* iterLeafNodes(strHTML, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strHTML, "text/html");
  const body = doc.body;

  function* walk(node, format) {
    if (node.nodeType === Node.TEXT_NODE) {
      if (node.textContent.trim() !== '') {
        yield { text: node.textContent, format };
      }
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      const newFormat = format.slice();
      newFormat.push(node.tagName.toLowerCase());
      for (const child of node.childNodes) {
        yield* walk(child, newFormat);
      }
    }
  }

  for (const child of body.childNodes) {
    yield* walk(child, format);
  }
}
```

This function uses a recursive approach to walk through the DOM tree. It checks if the current node is a text node, and if it is, it yields an object with the text content and the current format. If the node is an element node, it adds the tag name to the format and recursively walks through its child nodes.