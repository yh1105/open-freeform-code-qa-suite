The issue you're experiencing could be due to a number of reasons. Here are a few things you could check:

1. **Domain Configuration**: Ensure that your domain is correctly configured in your `.env` file. The `APP_URL` should match the domain you're using. If you're using `www` in your URL, make sure it's included in the `APP_URL`.

2. **Session Domain**: In your `config/session.php` file, check the `domain` configuration. If it's null, Laravel will use the domain from the `APP_URL` in your `.env` file. If you're using subdomains, you might need to set this to your root domain, prefixed with a `.`. For example, `.yourdomain.com`.

3. **Secure Cookies**: If your `config/session.php` file has `secure` set to `true`, it means that it will only send the cookie over HTTPS. If your site is not using HTTPS, this could be the issue. You can set this to `env('SESSION_SECURE_COOKIE', false)` in your `config/session.php` file.

4. **Cookie SameSite Attribute**: Some hosting providers, or certain server configurations, may not properly handle cookies with the SameSite attribute. You can try setting `same_site` to `null` in your `config/session.php` file.

5. **File Permissions**: Ensure that Laravel has the necessary permissions to write to the `storage/framework/sessions` directory.

6. **Server Configuration**: Some server configurations or security modules (like ModSecurity on Apache) can interfere with session handling. You might need to check your server logs or contact your hosting provider for more information.

Remember to clear your config cache (`php artisan config:cache`) after making changes to your `.env` or config files.