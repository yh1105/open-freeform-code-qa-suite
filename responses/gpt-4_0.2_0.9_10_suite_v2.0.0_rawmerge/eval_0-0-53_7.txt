The issue is that you're trying to use inline JavaScript in your React component, which is not the correct way to handle events in React. Instead, you should use React's event system. 

Here's how you can modify your code to display the alert when the user clicks the upload button:

```javascript
import React, { Component } from 'react'

class Main extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      imageURL: '',
    };

    this.handleUploadImage = this.handleUploadImage.bind(this);
  }

  handleUploadImage(ev) {
    ev.preventDefault();

    const data = new FormData();
    data.append('file', this.uploadInput.files[0]);
    data.append('filename', this.fileName.value);

    fetch('http://localhost:8000/upload', {
      method: 'POST',
      body: data,
    }).then((response) => {
      response.json().then((body) => {
        this.setState({ imageURL: `http://localhost:8000/${body.file}` });
      });
    });

    alert("Your file is being uploaded!");
  }

  render() {
    return (
      <form onSubmit={this.handleUploadImage}>
        <div>
          <input ref={(ref) => { this.uploadInput = ref; }} type="file" />
        </div>
        <div>
          <input ref={(ref) => { this.fileName = ref; }} type="text" placeholder="Enter the desired name of file" />
        </div>
        <br />
        <div>
          <button type="submit">Upload</button>
        </div>
        <img src={this.state.imageURL} alt="img" />
      </form>
    );
  }
}

export default Main;
```

In this code, I've removed the inline JavaScript and added the alert to the `handleUploadImage` function. I've also changed the `onclick` attribute to `type="submit"` on the button, which will trigger the form's `onSubmit` event when clicked.