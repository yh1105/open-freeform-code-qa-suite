The problem is that the command substitution `$(echo {} | sed 's/\?.*//g')` is evaluated before `find` starts executing, so it doesn't have the desired effect.

You can use a bash loop to process the files found by `find`:

```bash
find . -type f -name '*\?*' | while read -r file; do mv "$file" "${file%%\?*}"; done
```

This command uses the `%%\?*` parameter expansion to remove the `?` and everything after it from each filename. The `-r` option to `read` prevents it from interpreting backslashes.