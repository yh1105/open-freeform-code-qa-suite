Sure, here is a function that does exactly what you asked for:

```python
import numpy as np

def getMax(matrix):
    # Convert the input to a numpy array (in case it's a list)
    matrix = np.array(matrix)
    # Select the third column from each 2D array in the 3D array and find the max value
    max_values = matrix[:,:,2].max(axis=1)
    # Reshape the result to a 2D array
    max_values = max_values.reshape(-1,1)
    return max_values
```

This function works by first converting the input to a numpy array (if it isn't already). Then it selects the third column from each 2D array in the 3D array and finds the max value. Finally, it reshapes the result to a 2D array and returns it.

Here is how you can use it:

```python
matrix = np.array([
    [[4, 1, 5, 2, 5, 5, 7, 8, 9, 7],
     [7, 4, 2, 4, 7, 8, 4, 1, 3, 5],
     [6, 1, 2, 1, 1, 1, 2, 3, 7, 6],
     [5, 5, 5, 0, 5, 4, 3, 8, 7, 1],
     [2, 8, 6, 7, 4, 7, 5, 5, 5, 1]],

    [[9, 9, 5, 8, 0, 7, 3, 9, 8, 1],
     [9, 1, 9, 5, 7, 4, 5, 4, 7, 0],
     [1, 0, 4, 8, 7, 3, 4, 3, 8, 8],
     [8, 1, 3, 1, 7, 0, 9, 9, 3, 8],
     [4, 0, 2, 3, 8, 2, 0, 1,