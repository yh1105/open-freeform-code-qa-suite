You can use the `strsplit` function in R to split the strings in your column. Here is a function `mySplit` that does this:

```r
mySplit <- function(df) {
  # Split the strings in the column by comma
  split_col <- strsplit(df$col1, ",")
  
  # Initialize an empty data frame to store the results
  result_df <- data.frame()
  
  # Loop through each row in the split column
  for (i in 1:length(split_col)) {
    # Split each element in the row by colon
    split_row <- strsplit(split_col[[i]], ":")
    
    # Convert the split row into a data frame
    row_df <- data.frame(matrix(unlist(split_row), nrow=2, byrow=T))
    
    # Transpose the data frame and set the column names
    row_df <- setNames(data.frame(t(row_df[2,])), row_df[1,])
    
    # Bind the row data frame to the result data frame
    result_df <- rbind(result_df, row_df)
  }
  
  # Return the result data frame
  return(result_df)
}
```

This function splits the strings in the column by comma, then splits each element in the row by colon. It then converts the split row into a data frame, transposes it, and sets the column names. Finally, it binds the row data frame to the result data frame.

You can use this function like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
mySplit(df)
```

This will return a data frame with the split columns.