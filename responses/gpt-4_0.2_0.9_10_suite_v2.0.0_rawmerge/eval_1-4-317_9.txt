You can achieve this by using the `merge` function in R, which merges two data frames by common columns or row names, or do other versions of database join operations. Here is the function `myReplace`:

```r
myReplace <- function(big, new_big) {
  # Merge the two data.tables
  merged_big <- merge(big, new_big, by = "id", all.x = TRUE)

  # Replace the NA values in col.y with the corresponding values in col.x
  merged_big$col.y[is.na(merged_big$col.y)] <- merged_big$col.x[is.na(merged_big$col.y)]

  # Drop the col.x column
  merged_big$col.x <- NULL

  # Rename the col.y column to col
  setnames(merged_big, "col.y", "col")

  return(merged_big)
}
```

You can call this function with your `big` and `new_big` data.tables like this:

```r
result <- myReplace(big, new_big)
print(result)
```

This function works by first merging the two data.tables on the "id" column. This results in a data.table with two "col" columns, one from each of the original data.tables. The function then replaces the NA values in the "col" column from `new_big` with the corresponding values from the "col" column from `big`. Finally, it drops the "col" column from `big` and renames the "col" column from `new_big` to "col".