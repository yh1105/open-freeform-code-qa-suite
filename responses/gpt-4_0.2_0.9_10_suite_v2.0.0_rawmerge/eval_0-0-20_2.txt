The issue with your code is that you are defining the `TabWrapper` styled component inside the `Tab` component. This means that a new `TabWrapper` is created every time the `Tab` component is rendered, which is inefficient.

Instead, you should define `TabWrapper` outside of the `Tab` component. You can still use props in your styled component by passing them in as arguments to the function that you provide to the styled component.

Here's how you can refactor your code:

```javascript
import React from 'react'
import styled from 'styled-components'

// start
const TabWrapper = styled.li`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px;
  margin: 1px;
  font-size: 3em;
  color: ${props => (props.isSelected ? `white` : `black`)};
  background-color: ${props => (props.isSelected ? `black` : `#C4C4C4`)};
  cursor: ${props => (props.isSelected ? 'default' : `pointer`)};
`
// end

const Tab = ({ onClick, isSelected, children }) => {
  return <TabWrapper onClick={onClick} isSelected={isSelected}>{children}</TabWrapper>
}

export default Tab
```

In this refactored code, `TabWrapper` is only created once, and the `isSelected` prop is passed to it in the `Tab` component. This is more efficient and is considered best practice when using styled-components.