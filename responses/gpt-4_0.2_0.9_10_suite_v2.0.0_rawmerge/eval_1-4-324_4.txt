Here is a function `mySplit` that uses the `strsplit` function to split the strings in the column `col1` of the data frame `df` by commas and colons. It then reshapes the resulting list into a data frame with separate columns for `name`, `Age`, and `City`.

```r
mySplit <- function(df) {
  # Split the strings in col1 by commas
  split_comma <- strsplit(df$col1, ",")
  
  # Split each resulting string by colons
  split_colon <- lapply(split_comma, function(x) strsplit(x, ":"))
  
  # Extract the values for name, Age, and City
  name <- sapply(split_colon, function(x) x[[1]][2])
  Age <- sapply(split_colon, function(x) x[[2]][2])
  City <- sapply(split_colon, function(x) x[[3]][2])
  
  # Combine the values into a data frame
  df_new <- data.frame(name = name, Age = Age, City = City)
  
  return(df_new)
}
```

This function assumes that the strings in `col1` always follow the pattern `name:value,Age:value,City:value`. If this is not the case, you may need to modify the function to handle different patterns.