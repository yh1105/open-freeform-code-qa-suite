You can't directly initialize a `@State` variable in the `init()` method. Instead, you can use a workaround by using a `@StateObject` or `@ObservedObject` and move your state into this object. Here is an example:

```swift
class ViewModel: ObservableObject {
    @Published var fullText: String

    init(letter: String) {
        self.fullText = list[letter] ?? ""
    }
}

struct StateFromOutside: View {
    let list = [
        "a": "Letter A",
        "b": "Letter B",
        // ...
    ]

    @StateObject var viewModel: ViewModel

    init(letter: String) {
        _viewModel = StateObject(wrappedValue: ViewModel(letter: list[letter] ?? ""))
    }

    var body: some View {
        TextField("Placeholder", text: $viewModel.fullText)
    }
}
```

In this example, `ViewModel` is a class that conforms to `ObservableObject` and contains the `fullText` state. The `StateFromOutside` struct now has a `@StateObject` property `viewModel` that is initialized in the `init()` method.