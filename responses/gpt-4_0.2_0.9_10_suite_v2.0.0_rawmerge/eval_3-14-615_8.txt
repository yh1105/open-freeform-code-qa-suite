In SwiftUI, there's no direct way to get the current scroll position of a `ScrollView`. The `ScrollViewReader` and `ScrollViewProxy` only provide a `scrollTo` method, not a method to read the current scroll position.

However, you can use `GeometryReader` to get the relative position of the content inside the `ScrollView`. Here's a basic example:

```swift
ScrollView {
    GeometryReader { geometry in
        Color.clear.preference(key: ScrollOffsetPreferenceKey.self, value: geometry.frame(in: .named("scrollView")).origin.y)
    }.frame(height: 0)

    // Your ScrollView content here
}
.coordinateSpace(name: "scrollView")
.onPreferenceChange(ScrollOffsetPreferenceKey.self) { offset in
    // You get the scroll offset here
}
```

In this example, `ScrollOffsetPreferenceKey` is a custom `PreferenceKey`. You need to define it like this:

```swift
struct ScrollOffsetPreferenceKey: PreferenceKey {
    static var defaultValue: CGFloat = .zero
    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value += nextValue()
    }
}
```

This will give you the scroll offset relative to the start of the `ScrollView`. Remember that this is a workaround, and it might not work perfectly in all situations.