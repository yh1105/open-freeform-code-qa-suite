You can use the `CssBaseline` component from Material-UI to set the background color of the root element dynamically. `CssBaseline` is a component that provides an elegant, consistent, and simple baseline to build upon. It applies a normalization of CSS for cross-browser consistency.

Here's an example of how you can use it:

```jsx
import React from 'react';
import { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';

const lightTheme = createMuiTheme({
  palette: {
    type: 'light',
    background: {
      default: '#fff' // your light background color here
    }
  }
});

const darkTheme = createMuiTheme({
  palette: {
    type: 'dark',
    background: {
      default: '#000' // your dark background color here
    }
  }
});

function App() {
  const [darkMode, setDarkMode] = React.useState(false);

  const theme = darkMode ? darkTheme : lightTheme;

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      {/* Your other components go here */}
      <button onClick={toggleDarkMode}>Toggle Dark Mode</button>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we're using the `ThemeProvider` to provide the theme to all child components. We're also using the `CssBaseline` component to apply the background color to the root element. The `darkMode` state variable is used to toggle between the light and dark themes.