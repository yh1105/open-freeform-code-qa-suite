The error message indicates that the ffi gem is trying to load the `libffi.so.6` shared library, but it can't find it. This is likely because the upgrade to your OS included an upgrade to libffi, which now has a different version number.

You can try the following steps to fix this issue:

1. Check the version of libffi in your system:

```bash
ls /usr/lib/x86_64-linux-gnu/libffi.so*
```

This will list all the versions of libffi installed on your system. If `libffi.so.6` is not listed, it means that it's not installed or it has been upgraded to a new version.

2. If `libffi.so.6` is not listed, you can create a symbolic link to the existing version of libffi. For example, if `libffi.so.7` is listed, you can create a symbolic link like this:

```bash
sudo ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6
```

3. After creating the symbolic link, try running the rails command again. If it still doesn't work, you may need to reinstall the ffi gem:

```bash
gem uninstall ffi
gem install ffi
```

4. If the problem persists, you may need to reinstall Ruby and Rails. If you're using rbenv, you can do this with the following commands:

```bash
rbenv uninstall 2.7.1
rbenv install 2.7.1
gem install rails
```

Remember to replace `2.7.1` with your Ruby version if it's different.

Please note that creating symbolic links to shared libraries is a workaround and not a recommended solution. It's better to use the correct version of the shared library that the software (in this case, the ffi gem) expects. If possible, you should try to find a version of the ffi gem that works with the version of libffi installed on your system.