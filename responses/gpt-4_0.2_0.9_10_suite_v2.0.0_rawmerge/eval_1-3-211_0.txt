Sure, you can use the `groupby` and `cumsum` functions from pandas to achieve this. Here is the function:

```python
def aggregation(df):
    # Convert 'value' column to numeric
    df['value'] = pd.to_numeric(df['value'])

    # Create a new column 'balance' where 'type' is 'deposit', else NaN
    df['balance'] = df.loc[df['type'] == 'deposit', 'value']

    # Group by 'exchange' and calculate cumulative sum, forward filling NaN values
    df['balance'] = df.groupby('exchange')['balance'].cumsum().ffill()

    return df
```

This function first converts the 'value' column to numeric type. Then, it creates a new column 'balance' where it copies the 'value' if 'type' is 'deposit', else it sets it to NaN. After that, it groups the DataFrame by 'exchange' and calculates the cumulative sum of 'balance', filling forward the NaN values. Finally, it returns the modified DataFrame.