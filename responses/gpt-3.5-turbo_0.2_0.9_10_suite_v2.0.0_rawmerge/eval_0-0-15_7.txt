To mock a class with Jest, you can use the `jest.mock()` function and return a constructor function that creates an object with the desired methods. Here's how you can modify your code to mock the `API` class:

```javascript
import API from 'utils/API';

jest.mock('utils/API', () => {
  return jest.fn().mockImplementation(() => {
    return {
      someMethod: jest.fn()
    };
  });
});

// Now you can create an instance of the mocked API class
const api = new API();
```

In this code, we're using `jest.fn()` to create a mock function that returns an object with a `someMethod()` function. We're then returning a constructor function that creates an instance of this object when called with the `new` keyword. Finally, we're calling `jest.mock()` with this constructor function to replace the original `API` class with the mock implementation.

With this code, you should be able to create an instance of the mocked `API` class without encountering the `TypeError` error.