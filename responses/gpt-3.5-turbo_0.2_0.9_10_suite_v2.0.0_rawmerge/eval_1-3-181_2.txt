You can use the `numpy.max()` function along with the appropriate axis parameter to get the maximum value of each column in the third dimension of the input array. Then, you can reshape the resulting 1D array into a 2D array with a single column using the `numpy.reshape()` function. Here's the code for the `getMax()` function:

```python
import numpy as np

def getMax(matrix):
    max_values = np.max(matrix[:,:,2], axis=1)
    return np.reshape(max_values, (-1, 1))
```

Here, `matrix[:,:,2]` selects the third column of each 2D subarray in the 3D array, and `axis=1` specifies that we want to take the maximum value along the second axis (i.e., the columns) of this 2D subarray. The resulting 1D array has the maximum value of each third column. Finally, `np.reshape()` is used to reshape this 1D array into a 2D array with a single column and as many rows as there are subarrays in the original 3D array.