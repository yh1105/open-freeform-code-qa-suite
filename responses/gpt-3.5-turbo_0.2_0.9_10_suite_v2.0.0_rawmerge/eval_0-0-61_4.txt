To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. The `ThemeProvider` component allows you to pass a theme object as a prop, which can be used to customize the styles of Material-UI components.

Here's an example of how you can use the `ThemeProvider` component to change the background color of the root element dynamically:

```jsx
import React from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';

const lightTheme = createMuiTheme({
  palette: {
    background: {
      default: '#fff',
    },
  },
});

const darkTheme = createMuiTheme({
  palette: {
    background: {
      default: '#000',
    },
  },
});

function App() {
  const [isDarkMode, setIsDarkMode] = React.useState(false);

  const handleToggleDarkMode = () => {
    setIsDarkMode(!isDarkMode);
  };

  return (
    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>
      <CssBaseline />
      {/* Your app content goes here */}
      <button onClick={handleToggleDarkMode}>Toggle dark mode</button>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we define two themes: `lightTheme` and `darkTheme`. Each theme has a different background color. We use the `ThemeProvider` component to wrap our app content and pass the current theme based on the `isDarkMode` state. We also use the `CssBaseline` component to apply some basic global styles to the app.

Finally, we add a button that toggles the `isDarkMode` state, which will cause the theme to change and the background color of the root element to update dynamically.