Sure, here's a possible implementation of the `generateRandomString` function in Python:

```python
import random
import string

def generateRandomString():
    # Define the possible characters for the code
    chars = string.ascii_letters + string.digits
    
    # Generate a random code that satisfies the requirements
    while True:
        # Generate a 13-character random string
        code = ''.join(random.choice(chars) for _ in range(13))
        
        # Insert the "NAA3U" substring at a random position
        pos = random.randint(0, 13)
        code = code[:pos] + "NAA3U" + code[pos:]
        
        # Check if the code has exactly 3 digits
        if sum(c.isdigit() for c in code) == 3:
            return code
```

The function first defines the possible characters for the code as the concatenation of the lowercase and uppercase letters and the digits. Then, it enters a loop that generates random codes until it finds one that satisfies the requirements.

Each code is generated by first generating a 13-character random string using the `random.choice` function to select a random character from the `chars` string for each position. Then, the "NAA3U" substring is inserted at a random position using the `random.randint` function to select a random index between 0 and 13. Finally, the function checks if the code has exactly 3 digits using the `sum` function and the `isdigit` method of strings. If the code satisfies all the requirements, it is returned by the function.