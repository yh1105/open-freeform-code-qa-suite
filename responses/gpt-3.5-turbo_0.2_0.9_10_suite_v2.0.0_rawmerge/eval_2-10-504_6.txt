Yes, Rust provides a simple way to remove duplicate elements from an array using the `dedup` method. Here's an example:

```rust
fn main() {
    let mut arr = [
        Person { name: "aaa".to_string(), age: 10 },
        Person { name: "bbb".to_string(), age: 20 },
        Person { name: "bbb".to_string(), age: 20 },
        Person { name: "ccc".to_string(), age: 30 },
    ];

    arr.sort_by_key(|p| p.name.clone());
    arr.dedup_by_key(|p| p.name.clone());

    dbg!(arr);
}
```

In this example, we first sort the array by the `name` field using `sort_by_key`. Then, we use `dedup_by_key` to remove the duplicate elements based on the `name` field. The resulting array will contain only unique elements.