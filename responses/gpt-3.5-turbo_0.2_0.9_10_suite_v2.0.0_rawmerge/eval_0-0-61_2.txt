To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how you can use it to switch between a light and dark theme:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Switch from '@material-ui/core/Switch';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleDarkModeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <Switch checked={darkMode} onChange={handleDarkModeChange} />
        <h1>Hello World</h1>
        <p>This is a Material-UI app with a dynamic theme</p>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we use the `createMuiTheme` function to create a theme object with a `palette` property that changes the type of the theme between `'dark'` and `'light'` based on the `darkMode` state. 

We then use the `ThemeProvider` component to wrap our app and pass the theme object as a prop. The `CssBaseline` component is also included to apply global styles to the app.

Finally, we use the `backgroundColor` property on the root `div` element to set the background color dynamically based on the `theme.palette.background.default` value.

The `Switch` component is used to toggle the `darkMode` state and switch between the light and dark themes.