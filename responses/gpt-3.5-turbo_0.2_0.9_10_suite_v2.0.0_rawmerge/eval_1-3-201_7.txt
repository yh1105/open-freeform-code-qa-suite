You can use multiprocessing to run both scripts simultaneously. Here's an example of how you can modify your code to use multiprocessing:

```python
import multiprocessing as mp

def run_data_mining(database):
    dataMiningScript = fd.financeData(database, 1600)
    while True:
        # your data mining code here

def run_webpage(database):
    app = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])
    homepage = hp.homepage(database)
    homepage.timeUpdateCallback(app)
    homepage.gaugeRefreshCallback(app)
    app.layout = homepage.layoutMaker()
    app.run_server(debug=True)

if __name__ == "__main__":
    database = db.dataBase()
    p1 = mp.Process(target=run_data_mining, args=(database,))
    p2 = mp.Process(target=run_webpage, args=(database,))
    p1.start()
    p2.start()
    p1.join()
    p2.join()
```

In this code, we define two functions `run_data_mining` and `run_webpage` which will run the data mining script and the webpage script respectively. We then create two processes `p1` and `p2` for each function and start them using `p1.start()` and `p2.start()`. Finally, we use `p1.join()` and `p2.join()` to wait for the processes to finish.

Note that you may need to modify your data mining and webpage scripts to gracefully exit when the program is terminated. You can do this by catching the `KeyboardInterrupt` exception and exiting the loop.