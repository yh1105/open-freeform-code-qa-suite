Sure! Here is the implementation of the `findObject` function:

```javascript
function findObject(id, root_node) {
  if (root_node.id === id) {
    return root_node;
  } else {
    for (let i = 0; i < root_node.child.length; i++) {
      const result = findObject(id, root_node.child[i]);
      if (result) {
        return result;
      }
    }
  }
}
```

This function takes two parameters: `id` and `root_node`. It recursively searches the nested object tree for the object with the given `id` value. 

If the `id` value of the current node matches the given `id`, the function returns the current node. Otherwise, it recursively calls itself on each child node until it finds the node with the given `id` value.

Note that this implementation assumes that the `child` property of each node is an array. If the `child` property is not an array, the function will throw an error.