Starting from Android 11, there are some changes in the way file access works. You need to use the `MediaStore` API to create and access files in the external storage directory. Here's how you can modify your code to work on Android 11:

```
private fun getTempFile(): File {
    val timeStamp = SimpleDateFormat("yyyyMMdd_HHMMss", Locale.getDefault()).format(Date())
    val resolver = applicationContext.contentResolver
    val contentValues = ContentValues().apply {
        put(MediaStore.MediaColumns.DISPLAY_NAME, "image${Calendar.getInstance().timeInMillis}$timeStamp.jpg")
        put(MediaStore.MediaColumns.MIME_TYPE, "image/jpeg")
        put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + "/sample-take-image")
    }
    val uri = resolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues)
    return File(uri?.let { getRealPathFromURI(it) })
}

private fun getRealPathFromURI(uri: Uri): String? {
    val projection = arrayOf(MediaStore.Images.Media.DATA)
    val cursor = applicationContext.contentResolver.query(uri, projection, null, null, null)
    val columnIndex = cursor?.getColumnIndexOrThrow(MediaStore.Images.Media.DATA)
    cursor?.moveToFirst()
    val path = columnIndex?.let { cursor?.getString(it) }
    cursor?.close()
    return path
}
```

This code uses the `MediaStore` API to create a file with the specified name and path. The `getRealPathFromURI` function is used to get the actual file path from the `Uri` returned by the `MediaStore`.