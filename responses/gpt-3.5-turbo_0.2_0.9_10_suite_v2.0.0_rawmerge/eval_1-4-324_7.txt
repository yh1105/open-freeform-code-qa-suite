You can use the `tidyr` package to separate the column into multiple columns based on the delimiter. Here's the `mySplit` function that should do the job:

```r
library(tidyr)

mySplit <- function(df) {
  df %>%
    separate(col1, into = c("name", "Age", "City"), sep = ",|:", remove = FALSE) %>%
    select(-col1)
}
```

Here, we first use the `separate` function to split the `col1` into three separate columns based on the delimiters `,` and `:`. We specify the new column names as `name`, `Age`, and `City`. We also set `remove = FALSE` to keep the original column. Finally, we use `select` to drop the original `col1` column.

You can call this function on your example dataframe `df` as follows:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
mySplit(df)
```

This should give you the desired output:

```
      name Age City
1 Michael  31  NYC
2     Tom  25   NA
```