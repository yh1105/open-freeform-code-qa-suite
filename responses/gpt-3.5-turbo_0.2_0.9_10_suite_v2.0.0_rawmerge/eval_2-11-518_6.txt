The Rule of 5 is not outdated, as there are still cases where user-defined constructors and destructors are necessary. 

For example, if a class manages a resource that cannot be handled by a smart pointer, such as a file handle or a network connection, then a user-defined destructor is necessary to properly release that resource. Similarly, if a class has non-copyable or non-movable members, then a user-defined copy or move constructor/assignment operator may be necessary to properly handle those members.

While it is true that smart pointers can often be used to manage resources, there are cases where they may not be appropriate or efficient. Additionally, some developers may prefer to manage resources directly in their classes rather than relying on smart pointers.

In summary, while the Rule of 5 may not be necessary for all classes, it is still an important concept to understand and apply when appropriate.