Sure, here's a function that should do what you're asking for using `openpyxl`:

```python
import openpyxl

def filterExcelRows(filePath, matchedString):
    # Load the workbook
    wb = openpyxl.load_workbook(filePath)

    # Select the sheet
    sheet = wb['Sheet1']

    # Create an empty list to store the row indexes
    row_indexes = []

    # Loop through all the rows in the sheet
    for row in sheet.iter_rows():

        # Loop through all the cells in the row
        for cell in row:

            # Check if the cell contains the matched string
            if matchedString in str(cell.value):

                # If it does, add the row index to the list
                row_indexes.append(cell.row)

    # Create a list to store the contents of the cells in the matching rows
    cell_contents = []

    # Loop through all the rows in the sheet
    for row in sheet.iter_rows():

        # If the row index is in the list of matching row indexes
        if row[0].row in row_indexes:

            # Loop through all the cells in the row
            for cell in row:

                # Add the cell contents to the list
                cell_contents.append(cell.value)

    # Return the list of cell contents
    return cell_contents
```

You can call this function with the file path and the matched string as arguments, like this:

```python
matchedString = 'ABC'
filePath = 'path/to/your/file.xlsx'
result = filterExcelRows(filePath, matchedString)
```

This will return a list of all the cell contents in the rows that contain the matched string.