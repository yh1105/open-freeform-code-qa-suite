To import images in a React component with TypeScript and Parcel, you need to do the following:

1. Create a `.d.ts` file with the same name as the image file, e.g., `image.jpg.d.ts`. This file should contain the following code:

```typescript
declare module '*.jpg' {
  const value: any;
  export = value;
}
```

2. Place the `.d.ts` file in the same directory as the image file.

3. In your component file, import the image like this:

```typescript
import * as React from 'react';
import image from '../assets/image.jpg';

const Box = props => {
  // do things...
  return <img src={image} alt="My Image" />;
}

export default Box;
```

Note that you don't need to specify the file extension when importing the image. Also, make sure that the path to the image file is correct.

4. In your `tsconfig.json` file, make sure that the `include` property includes the directory where your `.d.ts` files are located. For example:

```json
{
  "compilerOptions": {
    // ...
  },
  "include": ["src/**/*.ts", "src/**/*.tsx", "src/**/*.d.ts"]
}
```

5. If TypeScript is still throwing an error about `Cannot find module`, try renaming your `.d.ts` file to something else, e.g., `declaration.d.ts`. TypeScript sometimes ignores files with certain names because it assumes that they are generated from other files.