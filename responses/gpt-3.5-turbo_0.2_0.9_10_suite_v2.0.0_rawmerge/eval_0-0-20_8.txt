Sure, here's a refactored version of your code that follows best practices and is more efficient:

```javascript
import React from 'react';
import styled, { css } from 'styled-components';

const TabWrapper = styled.li`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px;
  margin: 1px;
  font-size: 3em;
  color: ${props => (props.isSelected ? `white` : `black`)};
  background-color: ${props => (props.isSelected ? `black` : `#C4C4C4`)};
  cursor: ${props => (props.isSelected ? 'default' : `pointer`)};
  ${props =>
    props.isSelected &&
    css`
      &:hover {
        background-color: black;
        color: white;
      }
    `}
`;

const Tab = ({ onClick, isSelected, children }) => {
  return (
    <TabWrapper isSelected={isSelected} onClick={onClick}>
      {children}
    </TabWrapper>
  );
};

export default Tab;
```

In this refactored version, we move the `styled.li` component outside of the `Tab` component and define it as a separate `TabWrapper` component. We also pass the `isSelected` prop to the `TabWrapper` component and use it to conditionally style the component. Additionally, we use the `css` helper function from `styled-components` to add a hover effect when the tab is selected.