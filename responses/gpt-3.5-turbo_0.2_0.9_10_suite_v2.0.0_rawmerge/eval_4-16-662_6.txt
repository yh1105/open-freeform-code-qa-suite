You can use the `jq` command-line tool to minify JSON in a shell script. Here's an example:

```
cat file.json | jq -c .
```

This will read the contents of `file.json`, pipe it to `jq`, and use the `-c` option to output the result in compact form. The `.` argument tells `jq` to use the default filter, which just outputs the input as is.

If you want to pass the JSON directly to `jq` without using a file, you can use the `-n` option to create an empty input stream, and then use the `--argjson` option to pass the JSON as a string argument:

```
echo '{"foo": "lorem", "bar": "ipsum"}' | jq -cn --argjson json "$(cat)"
echo $json
```

This will output the minified JSON string to the console and also store it in the `$json` variable for later use.