You can use the `tidyr` package's `separate()` function to split the column into multiple columns based on a separator. Here's how you can write the `mySplit()` function:

```r
library(tidyr)

mySplit <- function(df) {
  df %>%
    separate(col1, into = c("name", "Age", "City"), sep = ",|:", remove = FALSE) %>%
    select(-col1)
}
```

Here, we first load the `tidyr` package. Then we use the `separate()` function to split the `col1` column into three columns - `name`, `Age`, and `City`. We specify the separator as `,|:` which means either a comma or a colon. We also set `remove = FALSE` to keep the original column in the resulting data frame. Finally, we use `select()` to drop the original `col1` column.

You can call this function by passing your data frame `df` as an argument:

```r
result <- mySplit(df)
```

This will return a data frame with three columns - `name`, `Age`, and `City`.