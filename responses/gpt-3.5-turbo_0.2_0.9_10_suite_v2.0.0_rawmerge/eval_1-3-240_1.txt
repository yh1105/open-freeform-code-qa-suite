You can use the `merge` function in pandas to merge the two data frames on all columns and then filter out the rows that are present in both data frames. Here's the implementation of the `getDifference` function:

```python
import pandas as pd

def getDifference(df1, df2):
    merged_df = pd.merge(df1, df2, how='outer', indicator=True)
    diff_df = merged_df[merged_df['_merge'] == 'left_only'].drop('_merge', axis=1)
    return diff_df
```

Here, we first merge the two data frames using the `merge` function with `how='outer'` to include all rows from both data frames. The resulting data frame will have an additional column `_merge` which indicates whether a row is present in both data frames or not.

We then filter out the rows that are present only in `df1` by selecting the rows where `_merge` is equal to `'left_only'`. Finally, we drop the `_merge` column and return the resulting data frame.

You can call this function with your data frames `df1` and `df2` as follows:

```python
df3 = getDifference(df1, df2)
```