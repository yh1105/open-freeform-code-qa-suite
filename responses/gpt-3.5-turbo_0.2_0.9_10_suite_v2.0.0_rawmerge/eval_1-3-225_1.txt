Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_latin_words = []
  for word in words:
    endString = word[1:].lower()
    startString = word[0].upper()
    pig_latin_words.append(endString + startString + 'ay')
  return ' '.join(pig_latin_words)
```

The changes made are:

- Instead of initializing `say` to an empty string, we initialize an empty list `pig_latin_words` to store the pig Latin words.
- We split the input text into words using the `split()` method.
- For each word in the input text, we extract the end of the word (from the second character onwards) and convert it to lowercase. We also extract the first character of the word and convert it to uppercase. We then append the end of the word, the first character in uppercase, and the string "ay" to form the pig Latin word.
- We append the pig Latin word to the `pig_latin_words` list.
- After processing all the words, we join the pig Latin words using a space as the separator and return the resulting string.

With these changes, the function should now correctly convert the input text to pig Latin.