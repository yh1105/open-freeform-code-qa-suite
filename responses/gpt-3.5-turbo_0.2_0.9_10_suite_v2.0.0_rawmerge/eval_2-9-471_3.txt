To import images in a React component with TypeScript and Parcel, you need to do the following:

1. Create a `.d.ts` file with the same name as the image file, in the same directory as the image. For example, if your image file is `image.jpg`, create a file called `image.d.ts`.

2. Inside the `.d.ts` file, declare a module with the same name as the image file, and export a string with the path to the image. For example:

```
declare module '*.jpg' {
  const value: string;
  export default value;
}
```

3. In your component file, import the image using the `import` statement, like this:

```
import * as React from 'react';
import image from '../assets/image.jpg';

const Box = props => {
  // do things...
}

export default Box;
```

Note that you should use `import image from '../assets/image.jpg'`, not `import * as image from '../assets/image.jpg'`. The latter syntax is used for importing modules, not files.

4. Make sure that your `.d.ts` file is included in the `include` section of your `tsconfig.json` file. For example:

```
{
  "compilerOptions": {
    // ...
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.d.ts"
  ]
}
```

If TypeScript is still throwing an error about `Cannot find module`, try restarting your development server. If that doesn't work, make sure that the path to the image file is correct.