The issue might be that the `ContentView` is not being updated when the `isSelected` value changes. You can try wrapping the `Text` view in a `VStack` and adding a `Spacer` to force the view to update:

```
var body: some View {
    VStack {
        Button(action: {
            self.isSelected.toggle()
        }) {
            Text(isSelected ? "Selected" : "Not Selected")
        }
        Spacer()
    }
}
``` 

Alternatively, you can try using a `@State` property instead of a `@Binding` property for `isSelected` in `ContentView` and pass it down to `ContentView` using `ContentView(isSelected: self.$selected)` in `ContentView_Previews`.