To import images in a React component with TypeScript, you need to define a module declaration for the image file type. Here's how you can do it:

1. Create a new file called `images.d.ts` in your `src` directory.
2. Inside `images.d.ts`, define a module declaration for the image file type like this:

```typescript
declare module '*.jpg' {
  const value: any;
  export = value;
}
```

This tells TypeScript that any file with a `.jpg` extension should be treated as a module, and that the module exports a value of type `any`.

3. In your `tsconfig.json` file, add `"include": ["src/images.d.ts"]` to the `"compilerOptions"` section. This tells TypeScript to include the `images.d.ts` file in the compilation process.

4. In your React component, import the image like this:

```typescript
import * as React from 'react';
import image from '../assets/image.jpg';

const Box = props => {
  return <img src={image} alt="My Image" />;
}

export default Box;
```

Note that we're using `import image from '../assets/image.jpg'` instead of `import * as img from '../assets/image.jpg'`. This is because we're treating the image file as a default export, not a named export.

With these changes, TypeScript should no longer throw an error when you try to import the image.