Yes, there is a simpler way to remove duplicate elements from an array in Rust. You can use the `dedup` method of the `Vec` type. Here's an example:

```rust
#[derive(Debug, PartialEq)]
struct Person {
    name: String,
    age: u32,
}

fn main() {
    let mut arr = vec![
        Person { name: "aaa".to_string(), age: 10 },
        Person { name: "bbb".to_string(), age: 20 },
        Person { name: "bbb".to_string(), age: 20 },
        Person { name: "ccc".to_string(), age: 30 },
    ];

    arr.dedup_by(|a, b| a.name == b.name);

    dbg!(arr);
}
```

This will remove all duplicate elements from the array based on the `name` field of the `Person` struct. The `dedup_by` method takes a closure that compares two elements and returns `true` if they are equal. In this case, we compare the `name` field of the two `Person` structs.