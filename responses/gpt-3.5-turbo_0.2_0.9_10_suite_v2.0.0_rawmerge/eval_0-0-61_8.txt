To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Switch from '@material-ui/core/Switch';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <Switch checked={darkMode} onChange={handleThemeChange} />
        <h1>Hello World</h1>
        <p>This is a Material-UI themed app.</p>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we use the `createMuiTheme` function to create a theme object that changes the palette type based on the `darkMode` state. We then pass this theme object to the `ThemeProvider` component, which applies it to all Material-UI components within its children.

To change the background color of the root element, we set the `backgroundColor` style property of the outermost `div` to `theme.palette.background.default`.

Finally, we use the `Switch` component to toggle the `darkMode` state, which triggers a re-render with the updated theme.