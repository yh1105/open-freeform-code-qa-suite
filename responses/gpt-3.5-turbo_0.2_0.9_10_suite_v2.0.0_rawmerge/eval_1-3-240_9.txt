You can use the `merge` function in pandas to join the two data frames on their common columns and then use the `indicator` parameter to identify the rows that are only in `df1`. Here's the code for the `getDifference` function:

```python
import pandas as pd

def getDifference(df1, df2):
    merged = pd.merge(df1, df2, how='outer', indicator=True)
    diff = merged[merged['_merge'] == 'left_only'].drop('_merge', axis=1)
    return diff
```

Here, we first merge the two data frames using an outer join and add an indicator column to identify the source of each row. The `_merge` column will have values of `both` for rows that are in both data frames, `left_only` for rows that are only in `df1`, and `right_only` for rows that are only in `df2`.

We then filter the merged data frame to keep only the rows that are in `df1` but not in `df2` by selecting the rows where `_merge` is `left_only`. Finally, we drop the `_merge` column and return the resulting data frame as the difference between `df1` and `df2`.