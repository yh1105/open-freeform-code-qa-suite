Sure, I can help you with that. Here's a function `filterExcelRows` that should do what you're asking for:

```python
from openpyxl import load_workbook

def filterExcelRows(filePath, matchedString):
    # Load the workbook
    wb = load_workbook(filename=filePath)

    # Select the active worksheet
    ws = wb.active

    # Create an empty list to store the row indexes
    row_indexes = []

    # Loop through all the rows in the worksheet
    for row in ws.iter_rows():
        # Loop through all the cells in the row
        for cell in row:
            # Check if the cell contains the matched string
            if cell.value == matchedString:
                # If it does, add the row index to the list
                row_indexes.append(row[0].row)

    # Create a list to store the contents of the cells in the matching rows
    row_contents = []

    # Loop through the row indexes
    for row_index in row_indexes:
        # Create a list to store the contents of the cells in the row
        row_content = []

        # Loop through all the cells in the row
        for cell in ws[row_index]:
            # Add the cell value to the row content list
            row_content.append(cell.value)

        # Add the row content list to the row contents list
        row_contents.append(row_content)

    # Return the row contents list
    return row_contents
```

Here's how you can use the function:

```python
filePath = 'path/to/your/excel/file.xlsx'
matchedString = 'ABC'

row_contents = filterExcelRows(filePath, matchedString)

print(row_contents)
```

This will print a list of lists, where each inner list contains the contents of the cells in a row that contains the matched string.