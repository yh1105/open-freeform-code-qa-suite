The issue with your code is that `rename()` method is used to rename the index or column labels of a DataFrame, not to rename a specific column. To rename a specific column, you can simply assign a new name to the column using the `rename()` method of the DataFrame.

Here's the modified code that should work for you:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data = datain, columns = ["t","p","x","y","z"])
    avg = df.groupby(["t"], sort=False)["p"].mean().reset_index(name='mean')
    return avg
```

In this code, we first group the DataFrame by the "t" column and calculate the mean of the "p" column using the `mean()` method. We then reset the index of the resulting DataFrame and rename the "p" column to "mean" using the `reset_index()` and `rename()` methods, respectively. Finally, we return the resulting DataFrame.

You can call this function by passing your original DataFrame as an argument:

```python
df = pd.DataFrame(data = datain, columns = ["t","p","x","y","z"])
renamed_df = renameDataFrame(df)
```

The resulting DataFrame `renamed_df` will have the "p" column renamed as "mean" and will contain the average numbers grouped by the "t" column.