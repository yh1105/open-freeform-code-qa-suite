Here's a possible implementation of the `generateRandomString` function in Python:

```python
import random
import string

def generateRandomString():
    # Define the allowed characters
    allowed_chars = string.ascii_letters + string.digits
    
    # Generate a random 3-digit number
    random_number = random.randint(100, 999)
    
    # Generate a random string of length 10
    random_string = ''.join(random.choice(allowed_chars) for _ in range(10))
    
    # Insert the random number at a random position
    random_position = random.randint(0, 10)
    random_string = random_string[:random_position] + str(random_number) + random_string[random_position:]
    
    # Insert the sub-string "NAA3U" at a random position
    random_position = random.randint(0, 13)
    random_string = random_string[:random_position] + "NAA3U" + random_string[random_position+5:]
    
    return random_string
```

Here's how the function works:

1. We define the allowed characters as all the letters (lowercase and uppercase) and digits.
2. We generate a random 3-digit number using the `random.randint` function.
3. We generate a random string of length 10 using a list comprehension and the `random.choice` function.
4. We insert the random number at a random position in the random string using string slicing.
5. We insert the sub-string "NAA3U" at a random position in the random string using string slicing.
6. We return the resulting random string.

Note that this implementation assumes that the sub-string "NAA3U" can appear anywhere in the random string (not necessarily in the first 5 characters). If you want to restrict the position of the sub-string, you can modify the code accordingly.