The issue with your code is that the `rename()` method is used to rename the index or column labels of a DataFrame, not the values in a specific column. To rename a specific column in a Pandas DataFrame, you can simply assign a new name to the column using the `rename()` method with the `columns` parameter.

Here's the modified code that should work for you:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data = datain, columns = ["t","p","x","y","z"])
    avg = df.groupby(["t"], sort=False)["p"].mean().rename("mean")
    df.rename(columns={"p": "mean"}, inplace=True)
    return df
```

In this code, we first create a DataFrame `df` with the given column names. Then we group the DataFrame by the "t" column and calculate the mean of the "p" column. We rename the resulting column to "mean" using the `rename()` method and assign it to the `avg` variable.

Finally, we rename the "p" column in the original DataFrame `df` to "mean" using the `rename()` method with the `columns` parameter and return the modified DataFrame.