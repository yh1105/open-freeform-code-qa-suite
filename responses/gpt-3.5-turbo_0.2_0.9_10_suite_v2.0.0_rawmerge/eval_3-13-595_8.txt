Starting from Android 11, there are some changes in the file system access policy. You need to use the `MediaStore` API to save files in the external storage directory. Here's an example of how you can modify your code to save the image using `MediaStore`:

```
private fun saveImageToFile(bitmap: Bitmap? = null): String? {
    return try {
        val timeStamp = SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
        val fileName = "image_$timeStamp.jpg"
        val resolver = applicationContext.contentResolver
        val contentValues = ContentValues().apply {
            put(MediaStore.MediaColumns.DISPLAY_NAME, fileName)
            put(MediaStore.MediaColumns.MIME_TYPE, "image/jpeg")
            put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_PICTURES + "/sample-take-image")
        }
        val imageUri = resolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues)
        imageUri?.let {
            val outputStream = resolver.openOutputStream(it)
            bitmap?.compress(Bitmap.CompressFormat.JPEG, 100, outputStream)
            outputStream?.close()
            imageUri.toString()
        }
    } catch (e: Exception) {
        e.printStackTrace()
        ""
    }
}
```

This code creates a new file in the `Pictures/sample-take-image` directory and saves the image using the `MediaStore` API.