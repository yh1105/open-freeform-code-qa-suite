Yes, you can use the `go mod download` command to download all the dependencies specified in your `go.mod` file. This command will download the dependencies and cache them in your local module cache. 

You can then copy your `go.mod` and `go.sum` files to your Docker container and run `go mod download` to install the dependencies. This will take advantage of Docker's layer caching and make rebuilds faster.

Here's an example Dockerfile:

```
FROM golang:1.11-alpine

WORKDIR /app

COPY go.mod .
COPY go.sum .

RUN go mod download

COPY . .

RUN go build -o myapp .

CMD ["./myapp"]
```

In this example, we first copy the `go.mod` and `go.sum` files to the container and run `go mod download` to install the dependencies. We then copy the rest of the application code and build the binary. Finally, we set the command to run the binary.

Note that if you make changes to your `go.mod` file, you will need to run `go mod download` again to update the dependencies.