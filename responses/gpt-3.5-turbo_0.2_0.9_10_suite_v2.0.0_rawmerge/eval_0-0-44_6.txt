To create an index of a property in Mongoose schema using Nest.js, you can use the `@Schema` decorator to define the schema and then use the `@Index` decorator to define the index.

Here's an example:

```javascript
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema()
export class MySchema extends Document {
  @Prop()
  _id: string;

  @Prop({ required: true })
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

MySchema.index({ type: 1 });

export const MySchemaModel = SchemaFactory.createForClass(MySchema);
```

In this example, we define the `MySchema` class using the `@Schema` decorator. We then define the properties of the schema using the `@Prop` decorator. To create an index on the `type` property, we use the `MySchema.index({ type: 1 })` statement. Finally, we create the Mongoose model using `SchemaFactory.createForClass(MySchema)` and export it.

Note that the `@Index` decorator is not used in Nest.js, but instead, you can use the `Model.index()` method to create indexes.