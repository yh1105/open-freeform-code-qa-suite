To create an index on a property in a Mongoose schema using Nest.js, you can use the `@Schema` decorator to define the schema and the `@Prop` decorator to define the properties. To create an index on a property, you can add the `@Index` decorator to the property.

Here's an example:

```javascript
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema()
export class MySchema extends Document {
  @Prop({ required: true })
  name: string;

  @Prop({ required: true, index: true })
  type: string;

  @Prop()
  creationDate: Date;
}

export const MySchema = SchemaFactory.createForClass(MySchema);
```

In this example, an index is created on the `type` property by setting the `index` option to `true` in the `@Prop` decorator.

You can also create an index on multiple properties by using the `@Index` decorator on the schema class:

```javascript
@Schema()
@Index({ name: 1, type: 1 })
export class MySchema extends Document {
  // ...
}
```

This creates a compound index on the `name` and `type` properties.