The reason why the log statement with `itemSelected` value is empty is because the `onItemSelectedListener` is triggered asynchronously after the function has already returned. Therefore, the function returns the initial value of `itemSelected` which is an empty string.

To fix this, you can use a callback function to return the selected item instead of returning it directly from the function. Here's an example:

```
fun Spinner.setupListWithAdapter(list: MutableList<String>, callback: (String) -> Unit) {
    val adapter = ArrayAdapter(context, android.R.layout.simple_spinner_item, list)
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
    this.adapter = adapter
    this.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
        override fun onItemSelected(p0: AdapterView<*>?, p1: View?, p2: Int, p3: Long) {
            val itemSelected = list[p2]
            Log.e("categoryLog","1 : " + itemSelected)
            callback(itemSelected)
        }
        override fun onNothingSelected(p0: AdapterView<*>?) {
        }
    }
}
```

In this updated function, we pass a callback function as a parameter that takes a `String` parameter and returns nothing. Inside the `onItemSelectedListener`, we call this callback function with the selected item as the parameter. This way, the selected item is returned asynchronously through the callback function.

To use this function, you can call it like this:

```
spinner.setupListWithAdapter(list) { selectedItem ->
    // Do something with the selected item
}
```

In the callback function, you can perform any action you want with the selected item.