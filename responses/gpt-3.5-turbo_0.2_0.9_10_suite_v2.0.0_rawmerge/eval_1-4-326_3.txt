Here's a possible implementation of the `removeComma` function in R:

```r
removeComma <- function(s) {
  # Split the string into separate elements
  elements <- strsplit(s, ", ")
  
  # Loop over each element
  for (i in seq_along(elements)) {
    # Check if the element contains quotes
    if (grepl("\"", elements[[i]])) {
      # Replace commas inside quotes with a placeholder
      elements[[i]] <- gsub("(\"[^\"]*),([^\\\"]*\")", "\\1<COMMA>\\2", elements[[i]])
    }
  }
  
  # Combine the elements back into a single string
  result <- paste(elements, collapse = ", ")
  
  # Replace the placeholder with a space
  result <- gsub("<COMMA>", " ", result)
  
  return(result)
}
```

Here's how you can use it with the example input:

```r
string <- c("1, 2, \"something, else\"", "3, 5, \"more, more, more\"", "6, \"commas, are fun\", \"no, they are not\"")

lapply(string, removeComma)
#[[1]]
#[1] "1, 2, \"something else\""
#
#[[2]]
#[1] "3, 5, \"more more more\""
#
#[[3]]
#[1] "6, \"commas are fun\", \"no they are not\""
```

Note that the function returns a list of strings, one for each input element. If you want to combine them into a single vector, you can use `unlist()`:

```r
unlist(lapply(string, removeComma))
#[1] "1, 2, \"something else\""       "3, 5, \"more more more\""      
#[3] "6, \"commas are fun\", \"no they are not\""
```