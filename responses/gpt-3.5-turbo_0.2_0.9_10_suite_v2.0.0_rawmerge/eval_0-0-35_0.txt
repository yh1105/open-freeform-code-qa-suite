Yes, you should use `REDIS_TLS_URL` to connect to Heroku Redis with TLS. Here's an example using `node_redis` v3:

```javascript
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(":")[1]);
```

Note that we're passing the `rejectUnauthorized` option to the `tls` object with a value of `false`. This is because Heroku Redis uses a self-signed certificate, so we need to tell Node to ignore the certificate validation.

Also, make sure you have the `redis` and `url` modules installed by running `npm install redis url`.