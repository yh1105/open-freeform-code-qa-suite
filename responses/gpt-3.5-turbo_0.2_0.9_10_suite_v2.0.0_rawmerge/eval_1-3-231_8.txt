You can use a list comprehension to iterate over each tensor in the list and get its size using the `.size()` method of PyTorch tensors. Here's the implementation of the `getSize` function:

```python
import torch

def getSize(t):
    return [tensor.size() for tensor in t]
```

You can then call this function with your list of PyTorch tensors as argument:

```python
t = [
    torch.tensor([[-0.2781, -0.2567, -0.2353,  ..., -0.9640, -0.9855, -1.0069],  
                  [-0.2781, -0.2567, -0.2353,  ..., -1.0069, -1.0283, -1.0927],  
                  [-0.2567, -0.2567, -0.2138,  ..., -1.0712, -1.1141, -1.1784],  
                  ...,  
                  [-0.6640, -0.6425, -0.6211,  ..., -1.0712, -1.1141, -1.0927],  
                  [-0.6640, -0.6425, -0.5997,  ..., -0.9426, -0.9640, -0.9640],  
                  [-0.6640, -0.6425, -0.5997,  ..., -0.9640, -0.9426, -0.9426]]),
    torch.tensor([[-0.0769, -0.0980, -0.0769,  ..., -0.9388, -0.9598, -0.9808],  
                  [-0.0559, -0.0769, -0.0980,  ..., -0.9598, -1.0018, -1.0228],    
                  [-0.0559, -0.0769, -0.0769,  ..., -1.0228, -1.0439, -1.0859],  
                  ...,  
                  [-0.4973, -0.4973, -0.4973,  ..., -1.0018, -1.0439, -1.0228],  
                 