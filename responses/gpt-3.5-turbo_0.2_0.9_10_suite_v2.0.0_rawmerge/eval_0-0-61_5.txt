To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { CssBaseline } from '@material-ui/core';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <h1>Hello World!</h1>
        <button onClick={handleThemeChange}>Toggle Theme</button>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we're using the `createMuiTheme` function to create a theme object with a `palette` property that specifies the type of palette to use based on the `darkMode` state. We're also using the `CssBaseline` component to apply some basic global styles to the document.

Then, we're wrapping our app with the `ThemeProvider` component and passing in the `theme` object. Finally, we're using the `backgroundColor` property of the theme's `palette.background` object to set the background color of our root element dynamically.

We're also using a button to toggle the `darkMode` state, which will cause the theme to switch between light and dark modes.