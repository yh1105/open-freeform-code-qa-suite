It seems like the issue is related to the inability of the go module system to download the dependent private repo. Here are some steps you can take to debug the issue:

1. Check if you have the correct permissions to access the private repo. You can try cloning the repo manually using the same credentials that you used to pull the main repo.

2. Check if the private repo is listed in the go.mod file as a dependency. If it is not listed, you can try adding it manually and then running `go mod tidy` to update the go.sum file.

3. Check if the private repo is hosted on a different domain than the main repo. If it is, you may need to configure your git credentials to allow access to that domain.

4. Check if the private repo has any dependencies that are not listed in the go.mod file. If it does, you may need to add those dependencies manually to the go.mod file.

5. Check if the private repo has any tags or branches that are not available on the computer B. If it does, you may need to fetch those tags or branches manually using `git fetch`.

6. Check if the private repo has any submodules that are not initialized. If it does, you may need to run `git submodule update --init` to initialize them.

7. Check if the private repo has any dependencies that are not compatible with the version of Go installed on computer B. If it does, you may need to update your version of Go or find a compatible version of the dependency.

Hopefully, one of these steps will help you debug the issue and get your program building successfully on computer B.