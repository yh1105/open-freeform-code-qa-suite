You can specify the Java version to use with the Maven wrapper by setting the `JAVA_HOME` environment variable before running the wrapper command. 

For example, if you want to use Java 8, you can set the `JAVA_HOME` variable to the path of your Java 8 installation:

```
export JAVA_HOME=/path/to/java8
```

Then, you can run the Maven wrapper command as usual:

```
./mvnw clean install
```

This should use the specified Java version instead of the default one.

Alternatively, you can also specify the Java version in the `pom.xml` file of your project by adding the following configuration to the `maven-compiler-plugin`:

```
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.1</version>
      <configuration>
        <source>1.8</source>
        <target>1.8</target>
      </configuration>
    </plugin>
  </plugins>
</build>
```

This will set the Java version to 1.8 for the Maven compiler plugin, which should be used by the Maven wrapper as well.