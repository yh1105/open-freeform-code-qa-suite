There are a few things you can check to troubleshoot this issue:

1. Make sure that the `@EnableSwagger2` annotation is present in your Spring Boot application class. This annotation enables Swagger support in your application.

2. Check that the `@ComponentScan` annotation is scanning the package where your controllers are located. Swagger needs to know where your controllers are to generate the API documentation.

3. Verify that the `springdoc.swagger-ui.path` property is not set to a different value in your application.properties or application.yml file. By default, the path should be `/swagger-ui.html`.

4. Check that the version of the `springdoc-openapi-ui` dependency matches the version of the `springdoc-openapi-core` dependency. They should have the same version number.

5. If you are using Spring Security, make sure that you have configured it to allow access to the Swagger UI endpoint. You can do this by adding a configuration class that extends `WebSecurityConfigurerAdapter` and overrides the `configure(HttpSecurity http)` method to allow access to the Swagger UI endpoint.

If none of these solutions work, you can try to debug your application and see if there are any error messages in the console or logs that can help you identify the issue.