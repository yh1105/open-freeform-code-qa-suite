It seems like the module `github.ibm.com/kms/key-protect-client` cannot be found or downloaded by the Go module system on computer B. Here are some steps you can take to debug this issue:

1. Check if the module is available in the module cache on computer B. You can do this by running the following command:

   ```bash
   go list -m github.ibm.com/kms/key-protect-client@v0.1.5
   ```

   If the module is available in the cache, you should see output similar to the following:

   ```
   github.ibm.com/kms/key-protect-client v0.1.5
   ```

   If the module is not available in the cache, you will see an error message.

2. Check if the module is available on the remote repository. You can do this by running the following command:

   ```bash
   go list -m -versions github.ibm.com/kms/key-protect-client
   ```

   This will list all available versions of the module on the remote repository. If the module is not available on the remote repository, you will see an error message.

3. Check if there are any network issues preventing the module from being downloaded. You can do this by running the following command:

   ```bash
   go env GONOPROXY GONOSUMDB GOPRIVATE
   ```

   This will show you the environment variables that control which modules are excluded from the proxy and checksum database, and which modules are considered private. Make sure that the module you are trying to download is not excluded or considered private.

4. Check if there are any authentication issues preventing the module from being downloaded. You can do this by running the following command:

   ```bash
   go env GITHUB_TOKEN
   ```

   This will show you the value of the `GITHUB_TOKEN` environment variable, which is used for authentication when downloading modules from GitHub. Make sure that the token is set correctly and has the necessary permissions to access the module.

5. If none of the above steps help, try running the `go get` command to download the module explicitly:

   ```bash
   go get github.ibm.com/kms/key-protect-client@v0.1.5
   ```

   This will download the module and its dependencies to the module cache, and should allow you to build the program.